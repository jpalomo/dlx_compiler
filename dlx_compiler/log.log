DEBUG [main] (Optimizer.java:125) - CP - Found assignment of constant to variable, update instruction 1 and propoate an instruction
DEBUG [main] (Optimizer.java:229) - Updated left operand of instruction number 4 from a_1 to (1)
DEBUG [main] (Optimizer.java:235) - Updated right operand of instruction number 14 from a_1 to (1)
DEBUG [main] (Optimizer.java:125) - CP - Found assignment of constant to variable, update instruction 2 and propoate an instruction
DEBUG [main] (Optimizer.java:235) - Updated right operand of instruction number 4 from b_2 to (2)
DEBUG [main] (Optimizer.java:235) - Updated right operand of instruction number 10 from b_2 to (2)
DEBUG [main] (Optimizer.java:125) - CP - Found assignment of constant to variable, update instruction 3 and propoate an instruction
DEBUG [main] (Optimizer.java:229) - Updated left operand of instruction number 17 from c_3 to (3)
DEBUG [main] (Optimizer.java:125) - CP - Found assignment of constant to variable, update instruction 6 and propoate an instruction
DEBUG [main] (Optimizer.java:235) - Updated right operand of instruction number 8 from a_6 to (6)
DEBUG [main] (Optimizer.java:235) - Updated right operand of instruction number 11 from a_6 to (6)
DEBUG [main] (Optimizer.java:129) - CP - Removing instruction 9: MOVE    (8)  b_9 because it was propagated.
DEBUG [main] (Optimizer.java:151) - Removing instruction number: 9 from block number: 3
DEBUG [main] (Optimizer.java:229) - Updated left operand of instruction number 10 from b_9 to (8)
DEBUG [main] (Optimizer.java:129) - CP - Removing instruction 12: MOVE   (11) a_12 because it was propagated.
DEBUG [main] (Optimizer.java:151) - Removing instruction number: 12 from block number: 3
DEBUG [main] (Optimizer.java:229) - Updated left operand of instruction number 7 from a_12 to (11)
DEBUG [main] (Optimizer.java:129) - CP - Removing instruction 15: MOVE   (14) a_15 because it was propagated.
DEBUG [main] (Optimizer.java:151) - Removing instruction number: 15 from block number: 4
DEBUG [main] (Optimizer.java:235) - Updated right operand of instruction number 7 from a_15 to (14)
DEBUG [main] (Optimizer.java:125) - CP - Found assignment of constant to variable, update instruction 16 and propoate an instruction
DEBUG [main] (Optimizer.java:235) - Updated right operand of instruction number 17 from c_16 to (16)
DEBUG [main] (Optimizer.java:129) - CP - Removing instruction 19: MOVE   (18) a_19 because it was propagated.
DEBUG [main] (Optimizer.java:151) - Removing instruction number: 19 from block number: 2
DEBUG [main] (Optimizer.java:229) - Updated left operand of instruction number 20 from a_19 to (18)
DEBUG [main] (Optimizer.java:272) - CSE - Propagating instruction 1: CP_CONST   #2      expression down block: 1.
DEBUG [main] (Optimizer.java:298) - CSE - Instruction 16: CP_CONST   #2      is a common subexression with instruction number: 1
DEBUG [main] (Optimizer.java:151) - Removing instruction number: 16 from block number: 4
DEBUG [main] (Optimizer.java:235) - Updated right operand of instruction number 17 from (16) to (1)
DEBUG [main] (Optimizer.java:272) - CSE - Propagating instruction 2: CP_CONST   #3      expression down block: 1.
DEBUG [main] (Optimizer.java:272) - CSE - Propagating instruction 3: CP_CONST   #0      expression down block: 1.
DEBUG [main] (Optimizer.java:272) - CSE - Propagating instruction 6: CP_CONST   #1      expression down block: 3.
DEBUG [main] (Optimizer.java:272) - CSE - Propagating instruction 8: ADD      #1  (6) expression down block: 3.
DEBUG [main] (Optimizer.java:298) - CSE - Instruction 11: ADD      #1  (6) is a common subexression with instruction number: 8
DEBUG [main] (Optimizer.java:151) - Removing instruction number: 11 from block number: 3
DEBUG [main] (Optimizer.java:229) - Updated left operand of instruction number 7 from (11) to (8)
DEBUG [main] (Optimizer.java:272) - CSE - Propagating instruction 14: ADD      #1  (1) expression down block: 4.
DEBUG [main] (Optimizer.java:272) - CSE - Propagating instruction 18: ADD      #1  a_7 expression down block: 2.
DEBUG [main] (Optimizer.java:272) - CSE - Propagating instruction 20: PUSH   (18)      expression down block: 2.
DEBUG [main] (Optimizer.java:272) - CSE - Propagating instruction 21: CALL   write      expression down block: 2.
DEBUG [main] (Optimizer.java:272) - CSE - Propagating instruction 22: END              expression down block: 2.
DEBUG [main] (RegisterAllocator.java:236) - Found leaf of control flow graph: 2
DEBUG [main] (RegisterAllocator.java:236) - Found leaf of control flow graph: 2
DEBUG [main] (RegisterAllocator.java:255) - Added block number: 3 to queue to be processed
DEBUG [main] (RegisterAllocator.java:255) - Added block number: 4 to queue to be processed
DEBUG [main] (BasicBlock.java:119) - Liveset for block number: 2 before processing: 
DEBUG [main] (RegisterAllocator.java:401) - Put new entry in frequencies table for: 7 
DEBUG [main] (InterferenceGraph.java:45) - Added node 7 to graph
DEBUG [main] (BasicBlock.java:159) - Liveset for block number: 2 after processing: 7
DEBUG [main] (RegisterAllocator.java:255) - Added block number: 1 to queue to be processed
DEBUG [main] (InterferenceGraph.java:45) - Added node 3 to graph
DEBUG [main] (InterferenceGraph.java:45) - Added node 8 to graph
DEBUG [main] (InterferenceGraph.java:107) - Added edge from 3 to 8
DEBUG [main] (InterferenceGraph.java:111) - Added edge from 8 to 3
DEBUG [main] (BasicBlock.java:119) - Liveset for block number: 3 before processing: 3,8
DEBUG [main] (RegisterAllocator.java:401) - Put new entry in frequencies table for: 6 
DEBUG [main] (InterferenceGraph.java:45) - Added node 6 to graph
DEBUG [main] (InterferenceGraph.java:107) - Added edge from 3 to 6
DEBUG [main] (InterferenceGraph.java:111) - Added edge from 6 to 3
DEBUG [main] (BasicBlock.java:159) - Liveset for block number: 3 after processing: 3
DEBUG [main] (InterferenceGraph.java:45) - Added node 1 to graph
DEBUG [main] (InterferenceGraph.java:45) - Added node 2 to graph
DEBUG [main] (InterferenceGraph.java:45) - Added node 14 to graph
DEBUG [main] (InterferenceGraph.java:107) - Added edge from 1 to 2
DEBUG [main] (InterferenceGraph.java:111) - Added edge from 2 to 1
DEBUG [main] (InterferenceGraph.java:107) - Added edge from 1 to 14
DEBUG [main] (InterferenceGraph.java:111) - Added edge from 14 to 1
DEBUG [main] (InterferenceGraph.java:107) - Added edge from 2 to 14
DEBUG [main] (InterferenceGraph.java:111) - Added edge from 14 to 2
DEBUG [main] (BasicBlock.java:119) - Liveset for block number: 4 before processing: 1,2,14
DEBUG [main] (RegisterAllocator.java:401) - Put new entry in frequencies table for: 1 
DEBUG [main] (BasicBlock.java:159) - Liveset for block number: 4 after processing: 1,2
DEBUG [main] (BasicBlock.java:119) - Liveset for block number: 1 before processing: 1,2,3
DEBUG [main] (RegisterAllocator.java:401) - Put new entry in frequencies table for: 4 
DEBUG [main] (RegisterAllocator.java:401) - Put new entry in frequencies table for: 14 
DEBUG [main] (InterferenceGraph.java:45) - Added node 4 to graph
DEBUG [main] (InterferenceGraph.java:107) - Added edge from 1 to 3
DEBUG [main] (InterferenceGraph.java:111) - Added edge from 3 to 1
DEBUG [main] (InterferenceGraph.java:107) - Added edge from 1 to 4
DEBUG [main] (InterferenceGraph.java:111) - Added edge from 4 to 1
DEBUG [main] (InterferenceGraph.java:107) - Added edge from 2 to 3
DEBUG [main] (InterferenceGraph.java:111) - Added edge from 3 to 2
DEBUG [main] (InterferenceGraph.java:107) - Added edge from 2 to 4
DEBUG [main] (InterferenceGraph.java:111) - Added edge from 4 to 2
DEBUG [main] (InterferenceGraph.java:107) - Added edge from 3 to 4
DEBUG [main] (InterferenceGraph.java:111) - Added edge from 4 to 3
DEBUG [main] (RegisterAllocator.java:406) - Updated frequency for key: 1  to: 2
DEBUG [main] (RegisterAllocator.java:401) - Put new entry in frequencies table for: 2 
DEBUG [main] (BasicBlock.java:159) - Liveset for block number: 1 after processing: 
DEBUG [main] (InterferenceGraph.java:146) - Updating neighbor 6 from 8 to -1.
DEBUG [main] (InterferenceGraph.java:149) - Updating neighbor 8 from 8 to -1.
DEBUG [main] (InterferenceGraph.java:127) - Removing 8 from graph.
DEBUG [main] (InterferenceGraph.java:146) - Updating neighbor 3 from 14 to -1.
DEBUG [main] (InterferenceGraph.java:149) - Updating neighbor 14 from 14 to -1.
DEBUG [main] (InterferenceGraph.java:146) - Updating neighbor 3 from 14 to -1.
DEBUG [main] (InterferenceGraph.java:149) - Updating neighbor 14 from 14 to -1.
DEBUG [main] (InterferenceGraph.java:127) - Removing 14 from graph.
DEBUG [main] (InterferenceGraph.java:127) - Removing 7 from graph.
DEBUG [main] (InterferenceGraph.java:53) - Added node -1 to graph
DEBUG [main] (InterferenceGraph.java:146) - Updating neighbor -2 from -1 to -2.
DEBUG [main] (InterferenceGraph.java:149) - Updating neighbor -1 from -1 to -2.
DEBUG [main] (InterferenceGraph.java:146) - Updating neighbor -2 from -1 to -2.
DEBUG [main] (InterferenceGraph.java:149) - Updating neighbor -1 from -1 to -2.
DEBUG [main] (InterferenceGraph.java:146) - Updating neighbor -2 from -1 to -2.
DEBUG [main] (InterferenceGraph.java:149) - Updating neighbor -1 from -1 to -2.
DEBUG [main] (InterferenceGraph.java:127) - Removing -1 from graph.
DEBUG [main] (InterferenceGraph.java:127) - Removing 10 from graph.
DEBUG [main] (InterferenceGraph.java:53) - Added node -2 to graph
DEBUG [main] (InterferenceGraph.java:192) - Node 3 has less than 100 edges with 5 number of edges.
DEBUG [main] (InterferenceGraph.java:192) - Node 1 has less than 100 edges with 4 number of edges.
DEBUG [main] (InterferenceGraph.java:192) - Node 2 has less than 100 edges with 4 number of edges.
DEBUG [main] (InterferenceGraph.java:192) - Node 4 has less than 100 edges with 3 number of edges.
DEBUG [main] (InterferenceGraph.java:192) - Node -2 has less than 100 edges with 3 number of edges.
DEBUG [main] (InterferenceGraph.java:192) - Node 6 has less than 100 edges with 1 number of edges.
DEBUG [main] (InterferenceGraph.java:53) - Added node 6 to graph
DEBUG [main] (RegisterAllocator.java:222) - Assigning register 1 to node 6
DEBUG [main] (InterferenceGraph.java:53) - Added node -2 to graph
DEBUG [main] (RegisterAllocator.java:222) - Assigning register 1 to node -2
DEBUG [main] (InterferenceGraph.java:53) - Added node 4 to graph
DEBUG [main] (RegisterAllocator.java:222) - Assigning register 1 to node 4
DEBUG [main] (InterferenceGraph.java:53) - Added node 2 to graph
DEBUG [main] (RegisterAllocator.java:222) - Assigning register 2 to node 2
DEBUG [main] (InterferenceGraph.java:53) - Added node 1 to graph
DEBUG [main] (RegisterAllocator.java:222) - Assigning register 3 to node 1
DEBUG [main] (InterferenceGraph.java:53) - Added node 3 to graph
DEBUG [main] (RegisterAllocator.java:222) - Assigning register 4 to node 3
